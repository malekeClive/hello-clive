{"version":3,"sources":["Components/Home.js","Components/SplashScreen.js","Components/Top.js","Components/Bottom.js","Components/About.js","Components/Experience.js","App.js","serviceWorker.js","index.js"],"names":["Home","text1","useRef","text2","useEffect","TimelineMax","to","current","top","ease","Power3","easeIn","easeOut","className","css","ref","SplashScreen","setIsSplashScreenDone","rootBackground","myName","myNameAnimation","setTimeout","opacity","y","eventCallback","style","display","clearTimeout","Top","line","text","TweenMax","width","delay","Bottom","About","revealRefs","hideComponent","addToRefs","el","includes","push","visibility","forEach","idx","gsap","fromTo","autoAlpha","x","duration","easeInOut","scrollTrigger","id","trigger","start","toggleActions","label","name","link","registerPlugin","ScrollTrigger","Contacts","href","rel","target","Experience","App","useState","isSplashScreenDone","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.612234f5.chunk.js","sourcesContent":["import React, { useRef, useEffect } from 'react';\r\nimport { css } from 'emotion';\r\n\r\nimport { TimelineMax, Power3 } from 'gsap';\r\n\r\nexport default function Home() {\r\n  const text1  = useRef(null);\r\n  const text2  = useRef(null);\r\n\r\n  useEffect(() => {\r\n    let tl = new TimelineMax();\r\n    \r\n    tl.to(\r\n      text1.current,\r\n      1,\r\n      {\r\n        top: 0,\r\n        // y: 0,\r\n        ease: Power3.easeIn\r\n      }\r\n    ).to(\r\n      text2.current,\r\n      1,\r\n      {\r\n        top: 0,\r\n        // y: 0,\r\n        ease: Power3.easeOut\r\n      }\r\n    );\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1 className={css`\r\n        color: #1e272e;\r\n        text-align: left;\r\n        margin: 0;\r\n        font-style: italic;\r\n        font-size: 5rem;\r\n\r\n        @media only screen and (min-width: 768px) {\r\n          font-size: 7rem;\r\n        }\r\n      `}>\r\n        <div className={css`\r\n          overflow: hidden;\r\n          position: relative;\r\n          height: 1.3em;\r\n          width: 3.5em;\r\n\r\n          @media only screen and (min-width: 768px) {\r\n            display: inline-block;\r\n            padding-right: 10px;\r\n          }\r\n        `}>\r\n          <span ref={text1} className={css`\r\n            position: absolute;\r\n            display: inline-block;\r\n            top: -1.1em;\r\n          `}>Franco</span>\r\n        </div>\r\n\r\n        <div className={css`\r\n          overflow: hidden;\r\n          position: relative;\r\n          height: 1.3em;\r\n          width: 3.5em;\r\n\r\n          @media only screen and (min-width: 768px) {\r\n            display: inline-block;\r\n            padding-right: 20px;\r\n          }\r\n        `}>\r\n          <span ref={text2} className={css`\r\n            position: absolute;\r\n            display: inline-block;\r\n            bottom: -1.1em;\r\n          `}> Clive M</span>\r\n        </div>\r\n      </h1>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useEffect, useRef } from 'react';\r\nimport { css } from 'emotion';\r\n\r\nimport { Power3, TimelineMax } from 'gsap';\r\n\r\nexport default function SplashScreen({ setIsSplashScreenDone }) {\r\n  let rootBackground = useRef(null);\r\n  let myName = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const myNameAnimation = setTimeout(() => {\r\n      var tl = new TimelineMax();\r\n      tl.to(\r\n        myName.current,\r\n        1,\r\n        {\r\n          opacity: 0,\r\n          y: 30,\r\n          ease: Power3.easeIn\r\n        }\r\n      ).to(\r\n        rootBackground.current,\r\n        1,\r\n        {\r\n          opacity: 0,\r\n          ease: Power3.easeIn\r\n        }\r\n      ).eventCallback(\"onComplete\", () => {\r\n        rootBackground.current.style.display = \"none\";\r\n        setIsSplashScreenDone(true);\r\n      });\r\n\r\n    }, 1000);\r\n    \r\n    return () => {\r\n      clearTimeout(myNameAnimation)\r\n    };\r\n  }, [setIsSplashScreenDone]);\r\n\r\n  return (\r\n    <div ref={rootBackground} className={css`\r\n      position: fixed;\r\n      width: 100%;\r\n      height: 100%;\r\n      background-color: #1e272e;\r\n    `}>\r\n      \r\n      <div className={css`\r\n        position: fixed;\r\n        top: 50%;\r\n        width: 100%;\r\n      `}>\r\n        <div className={css`\r\n          position: relative;\r\n          height: 30px;\r\n          overflow: hidden;\r\n          top: -13px;\r\n        `}>\r\n          <p ref={myName} className={css`\r\n            position: absolute;\r\n            text-align: center;\r\n            margin: 0;\r\n            width: 100%;\r\n            top: 0;\r\n            color: #fff;\r\n            font-size: 1.5rem;\r\n          `}>\r\n            Franco Clive Maleke\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useEffect, useRef } from 'react';\r\nimport { css } from 'emotion';\r\n\r\nimport { TweenMax, Power3 } from 'gsap';\r\n\r\nexport default function Top() {\r\n  const line = useRef(null);\r\n  const text = useRef(null);\r\n\r\n  useEffect(() => {\r\n    TweenMax.to(\r\n      line.current,\r\n      1,\r\n      {\r\n        width: \"80%\",\r\n        ease: Power3.easeOut\r\n      }\r\n    );\r\n    \r\n    const delay = setTimeout(() => {\r\n      TweenMax.to(\r\n        text.current,\r\n        1.5,\r\n        {\r\n          y: 0,\r\n          ease: Power3.easeOut\r\n        }\r\n      );\r\n    }, 100);\r\n\r\n    return () => clearTimeout(delay);\r\n  }, []);\r\n\r\n  return (\r\n    <div className={css`\r\n      padding-top: 10%;\r\n      padding-left: 10%;\r\n      padding-right: 10%;\r\n    `}>\r\n      <div className={css`\r\n        overflow: hidden;\r\n      `}>\r\n        <p ref={text} className={css`\r\n          transform: translate(0, 40px);\r\n          font-size: 1.5rem;\r\n          margin-bottom: .5rem;\r\n        `}>\r\n          Front-end Engineer\r\n        </p>\r\n      </div>\r\n      <div ref={line} className={css`\r\n        border-bottom: 3px solid #1e272e;\r\n        width: 0;\r\n      `}>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useEffect, useRef } from 'react';\r\nimport { css } from 'emotion';\r\n\r\nimport { TweenMax, Power3 } from 'gsap';\r\n\r\nexport default function Bottom() {\r\n  const top = useRef(null);\r\n\r\n  useEffect(() => {\r\n    TweenMax.to(\r\n      top.current,\r\n      .5,\r\n      {\r\n        opacity: 1,\r\n        ease: Power3.easeIn\r\n      }\r\n    )\r\n  }, []);\r\n\r\n  return (\r\n    <div ref={ top } className={css`\r\n      padding-bottom: 10%;\r\n      padding-left: 10%;\r\n      padding-right: 10%;\r\n    `}>\r\n      <div className={css`\r\n        width: 80%;\r\n        border-top: 2px solid #1e272e;\r\n      `}>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useEffect, useRef } from 'react';\r\nimport { css } from 'emotion';\r\n\r\nimport { gsap, Power3 } from 'gsap';\r\nimport { ScrollTrigger } from 'gsap/ScrollTrigger';\r\n\r\ngsap.registerPlugin(ScrollTrigger);\r\n\r\nexport default function About() {\r\n\r\n  const revealRefs = useRef([]);\r\n  const hideComponent = useRef(null);\r\n\r\n  const addToRefs = el => {\r\n    if (!revealRefs.current.includes(el)) {\r\n      revealRefs.current.push(el);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    hideComponent.current.style.visibility = 'visible';\r\n    revealRefs.current.forEach((el, idx) => {\r\n      gsap.fromTo(\r\n        el, \r\n        {\r\n          autoAlpha: 0,\r\n          x: -100\r\n        },\r\n        {\r\n          duration: 1, \r\n          autoAlpha: 1, \r\n          x: 0,\r\n          ease: Power3.easeInOut,\r\n          scrollTrigger: {\r\n            id: `section-${idx + 1}`,\r\n            trigger: el,\r\n            start: 'top center+=250',\r\n            toggleActions: 'play none none reverse',\r\n            // markers: true\r\n          }\r\n        });\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div ref={hideComponent} className={css`\r\n      visibility: hidden;\r\n    `}>\r\n      <div ref={addToRefs}>\r\n        <div className={css`\r\n          display: flex;\r\n          align-items: center;\r\n\r\n          @media only screen and (min-width: 768px) {\r\n            h3 {\r\n              font-size: 3rem;\r\n            }\r\n            p {\r\n              font-size: 2rem;\r\n            }\r\n          }\r\n        `}>\r\n          <h3 className={css`\r\n            display: inline-block;\r\n            font-size: 2rem;\r\n            margin: .5rem 0;\r\n            `}>About\r\n          </h3>\r\n        </div>\r\n\r\n        <div>\r\n          <p className={css`\r\n            font-size: 1.5rem;\r\n            margin: 0;\r\n            width: 70%;\r\n            `}>Hi there, you can call me Clive. i loved to learn and makes a\r\n            new things especially in tech.\r\n            I was learning on front-end side for a year and also i can do\r\n            little bit things on back-end side.\r\n            Currently develop a casino games using Unity on front-end\r\n            side.\r\n            </p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className={css`\r\n        display: flex;\r\n        flex-direction: column;\r\n        margin-top: 5em;\r\n\r\n        > div {\r\n          margin: 1em 0;\r\n        }\r\n\r\n        @media only screen and (min-width: 768px) {\r\n          margin-top: 6em;\r\n\r\n          h5 {\r\n            font-size: 3rem;\r\n          }\r\n          p {\r\n            font-size: 1.5rem;\r\n          }\r\n        }\r\n      `}>\r\n        <div ref={addToRefs} >\r\n          <div className={css`\r\n            display: inline-block;\r\n            margin-bottom: 10px;\r\n          `}>\r\n            <h5 className={css`\r\n              font-size: 1.5rem;\r\n              margin: 0;\r\n            `}>What i usually do</h5>\r\n          </div>\r\n\r\n          <div>\r\n            <p className={css`\r\n              font-size: 1rem;\r\n              margin: 0;\r\n            `}>front-end development</p>\r\n          </div>\r\n        </div>\r\n\r\n        <div ref={addToRefs}>\r\n          <div className={css`\r\n            display: inline-block;\r\n            margin-bottom: 10px;\r\n          `}>\r\n            <h5 className={css`\r\n              font-size: 1.5rem;\r\n              margin: 0;\r\n            `}>What tech i used</h5>\r\n          </div>\r\n\r\n          <div className={css`\r\n            font-size: 1rem;\r\n          `}>\r\n            <p className={css`\r\n              margin: 0;\r\n            `}>\r\n              unity engine (at work)\r\n            </p>\r\n\r\n            <p className={css`\r\n              margin: 0;\r\n            `}>\r\n              react js (self taught)\r\n            </p>\r\n          </div>\r\n        </div>\r\n\r\n        <div ref={addToRefs}>\r\n          <div className={css`\r\n            display: inline-block;\r\n            margin-bottom: 10px;\r\n          `}>\r\n            <h5 className={css`\r\n              font-size: 1.5rem;\r\n              margin: 0;\r\n            `}>Contact & social media</h5>\r\n          </div>\r\n\r\n          <Contacts label=\"phone\" name=\"+62-852-6781-9928\" />\r\n          <Contacts label=\"email\" name=\"francoclivemaleke23@gmail.com\" link=\"mailto:francoclivemaleke23@gmail.com\" />\r\n          <Contacts label=\"github\" name=\"github.com/malekeClive\" link=\"https://github.com/malekeClive\" />\r\n          \r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Contacts = ({ label, name, link=\"empty\" }) => {\r\n  return (\r\n    <div className={css`\r\n      margin-bottom: 7px;\r\n    `}>\r\n      <p className={css`\r\n        font-size: 1rem;\r\n        color: #474787;\r\n      `}>\r\n        { label }\r\n      </p>\r\n\r\n      { link === \"empty\" ? \r\n        <p className={css`\r\n          font-size: 1.3rem;\r\n          margin: 0;\r\n        `}>\r\n          { name }\r\n        </p>\r\n      : \r\n        <p className={css`\r\n          font-size: 1.3rem;\r\n          margin: 0;\r\n        `}>\r\n          <a \r\n            className={css`\r\n              text-decoration: none;\r\n              position: relative;\r\n              color: inherit;\r\n              \r\n              &:after {\r\n                content: \"\";\r\n                display: block;\r\n                position: absolute;\r\n                right: 0;\r\n                bottom: -5px;\r\n                width: 0;\r\n                height: 1px;\r\n                background-color: #1e272e;\r\n                transition-property: width;\r\n                transition-duration: 0.3s;\r\n                transition-timing-function: ease-out;\r\n              }\r\n\r\n              &:hover:after {\r\n                left: 0;\r\n                width: 100%;\r\n              }\r\n            `} \r\n            href={ link } \r\n            rel=\"noopener noreferrer\"\r\n            target=\"_blank\">\r\n              { name }\r\n          </a>\r\n        </p>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\r\n\r\nimport { css } from 'emotion';\r\n\r\nexport default function Experience() {\r\n  return (\r\n    <div className={css`\r\n      margin-bottom: 1em;\r\n    `}>\r\n      <div>\r\n        <h3 className={css`\r\n          font-size: 3rem;\r\n          margin: .5rem 0;\r\n        `}>Career</h3>\r\n      </div>\r\n\r\n      <div>\r\n        <p><b>Unity developer at PT. Asta Satria Investama</b></p>\r\n        <i>2019 - Present</i>\r\n        <p>PT. Asta Satria Investama is a startup company that developing casino games like big two, domino susun, poker and domino qq.</p>\r\n        <p>As a front-end my job is to develop features like find room menu, profile menu, settings menu, etc.</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState } from 'react';\r\n// import './App.css';\r\nimport { css } from 'emotion';\r\n\r\nimport Home from './Components/Home';\r\nimport SplashScreen from './Components/SplashScreen';\r\nimport Top from './Components/Top';\r\nimport Bottom from './Components/Bottom';\r\nimport About from './Components/About';\r\nimport Experience from './Components/Experience';\r\n\r\nfunction App() {\r\n  const [ isSplashScreenDone, setIsSplashScreenDone ] = useState(false);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <SplashScreen setIsSplashScreenDone={setIsSplashScreenDone} />\r\n      { isSplashScreenDone ? \r\n        <div>\r\n          <header>\r\n            <Top />\r\n          </header>\r\n\r\n          <main className={css`\r\n            display: flex;\r\n            flex-direction: column;\r\n            margin: 10px 10%;\r\n          `}>\r\n            <section className={css`\r\n              height: 15em;\r\n\r\n              @media only screen and (min-width: 768px) {\r\n                height: 10em;\r\n              }\r\n            `}>\r\n              <Home />\r\n            </section>\r\n\r\n            <section>\r\n              <About />\r\n            </section>\r\n\r\n            <section>\r\n              <Experience />\r\n            </section>\r\n          </main>\r\n          \r\n          <footer>\r\n            <Bottom />\r\n          </footer>\r\n        </div>\r\n      :\r\n        null\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}