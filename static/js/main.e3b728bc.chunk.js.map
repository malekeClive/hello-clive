{"version":3,"sources":["Components/Home.js","Components/SplashScreen.js","Components/Top.js","Components/Bottom.js","Components/About.js","Components/Experience.js","App.js","serviceWorker.js","index.js"],"names":["Home","text1","useRef","text2","useEffect","TimelineMax","to","current","top","ease","Power3","easeIn","easeOut","className","css","ref","SplashScreen","setIsSplashScreenDone","rootBackground","myName","backgroundFillTop","backgroundFillBottom","myNameAnimation","setTimeout","opacity","y","height","eventCallback","style","display","clearTimeout","Top","line","text","TweenMax","width","delay","Bottom","About","revealRefs","hideComponent","addToRefs","el","includes","push","visibility","forEach","idx","gsap","fromTo","autoAlpha","x","duration","easeInOut","scrollTrigger","id","trigger","start","toggleActions","Experience","registerPlugin","ScrollTrigger","App","useState","isSplashScreenDone","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e3b728bc.chunk.js","sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport { css } from 'emotion';\n\nimport { TimelineMax, Power3 } from 'gsap';\n\nexport default function Home() {\n  const text1  = useRef(null);\n  const text2  = useRef(null);\n\n  useEffect(() => {\n    let tl = new TimelineMax();\n    \n    tl.to(\n      text1.current,\n      1,\n      {\n        top: 0,\n        // y: 0,\n        ease: Power3.easeIn\n      }\n    ).to(\n      text2.current,\n      1,\n      {\n        top: 0,\n        // y: 0,\n        ease: Power3.easeOut\n      }\n    );\n  }, []);\n\n  return (\n    <div>\n      <h1 className={css`\n        color: #1e272e;\n        text-align: left;\n        margin: 0;\n        font-style: italic;\n        font-size: 5rem;\n\n        @media only screen and (min-width: 768px) {\n          font-size: 7rem;\n        }\n      `}>\n        <div className={css`\n          overflow: hidden;\n          position: relative;\n          height: 1.3em;\n          width: 3.5em;\n\n          @media only screen and (min-width: 768px) {\n            display: inline-block;\n            padding-right: 10px;\n          }\n        `}>\n          <span ref={text1} className={css`\n            position: absolute;\n            display: inline-block;\n            top: -1.1em;\n          `}>Franco</span>\n        </div>\n\n        <div className={css`\n          overflow: hidden;\n          position: relative;\n          height: 1.3em;\n          width: 3.5em;\n\n          @media only screen and (min-width: 768px) {\n            display: inline-block;\n            padding-right: 20px;\n          }\n        `}>\n          <span ref={text2} className={css`\n            position: absolute;\n            display: inline-block;\n            bottom: -1.1em;\n          `}> Clive M</span>\n        </div>\n      </h1>\n    </div>\n  )\n}\n","import React, { useEffect, useRef } from 'react';\nimport { css } from 'emotion';\n\nimport { Power3, TimelineMax } from 'gsap';\n\nexport default function SplashScreen({ setIsSplashScreenDone }) {\n  let rootBackground = useRef(null);\n  let myName = useRef(null);\n  let backgroundFillTop     = useRef(null);\n  let backgroundFillBottom  = useRef(null);\n\n  useEffect(() => {\n    const myNameAnimation = setTimeout(() => {\n      var tl = new TimelineMax();\n      tl.to(\n        myName.current,\n        1,\n        {\n          opacity: 0,\n          y: 30,\n          ease: Power3.easeIn\n        }\n      ).to(\n        backgroundFillTop.current,\n        1,\n        {\n          height: 0,\n          ease: Power3.easeIn\n        },\n      ).to(\n        backgroundFillBottom.current,\n        1,\n        {\n          height: 0,\n          ease: Power3.easeIn\n        } //, \"+=0.2\" ~> add delay if neccessary\n      ).eventCallback(\"onComplete\", () => {\n        rootBackground.current.style.display = \"none\";\n        setIsSplashScreenDone(true);\n      });\n\n    }, 1000);\n    \n    return () => {\n      clearTimeout(myNameAnimation)\n    };\n  }, []);\n\n  return (\n    <div ref={rootBackground} className={css`\n      position: fixed;\n      width: 100%;\n      height: 100%;\n      // background-color: #1e272e;\n    `}>\n      <div ref={backgroundFillTop} className={css`\n        position: fixed;\n        height: 50%;\n        width: 100%;\n        background-color: #1e272e;\n      `}>\n      </div>\n\n      <div ref={backgroundFillBottom} className={css`\n        position: fixed;\n        bottom: 0;\n        height: 50%;\n        width: 100%;\n        background-color: #1e272e;\n      `}>\n      </div>\n      \n      <div className={css`\n        position: fixed;\n        top: 50%;\n        width: 100%;\n      `}>\n        <div className={css`\n          position: relative;\n          height: 30px;\n          overflow: hidden;\n          top: -13px;\n        `}>\n          <p ref={myName} className={css`\n            position: absolute;\n            text-align: center;\n            margin: 0;\n            width: 100%;\n            top: 0;\n            color: #fff;\n            font-size: 1.5rem;\n          `}>\n            Franco Clive Maleke\n          </p>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, { useEffect, useRef } from 'react';\nimport { css } from 'emotion';\n\nimport { TweenMax, Power3 } from 'gsap';\n\nexport default function Top() {\n  const line = useRef(null);\n  const text = useRef(null);\n\n  useEffect(() => {\n    TweenMax.to(\n      line.current,\n      1,\n      {\n        width: \"80%\",\n        ease: Power3.easeOut\n      }\n    );\n    \n    const delay = setTimeout(() => {\n      TweenMax.to(\n        text.current,\n        1.5,\n        {\n          y: 0,\n          ease: Power3.easeOut\n        }\n      );\n    }, 100);\n\n    return () => clearTimeout(delay);\n  }, []);\n\n  return (\n    <div className={css`\n      padding-top: 10%;\n      padding-left: 10%;\n      padding-right: 10%;\n    `}>\n      <div className={css`\n        overflow: hidden;\n      `}>\n        <p ref={text} className={css`\n          transform: translate(0, 40px);\n          font-size: 1.5rem;\n          margin-bottom: .5rem;\n        `}>\n          Front-end Dev\n        </p>\n      </div>\n      <div ref={line} className={css`\n        border-bottom: 3px solid #1e272e;\n        width: 0;\n      `}>\n      </div>\n    </div>\n  )\n}\n","import React, { useEffect, useRef } from 'react';\nimport { css } from 'emotion';\n\nimport { TweenMax, Power3 } from 'gsap';\n\nexport default function Bottom() {\n  const top = useRef(null);\n\n  useEffect(() => {\n    TweenMax.to(\n      top.current,\n      .5,\n      {\n        opacity: 1,\n        ease: Power3.easeIn\n      }\n    )\n  }, []);\n\n  return (\n    <div ref={ top } className={css`\n      padding-bottom: 10%;\n      padding-left: 10%;\n      padding-right: 10%;\n    `}>\n      <div className={css`\n        width: 80%;\n        border-top: 2px solid #1e272e;\n      `}>\n        <div className={css`\n          margin: .7rem 0;\n          font-size: 1.5rem;\n          text-align: center;\n        `}>&#128075;</div>\n      </div>\n    </div>\n  )\n}\n","import React, { useEffect, useRef } from 'react';\nimport { css } from 'emotion';\n\nimport { gsap, Power3 } from 'gsap';\nimport { ScrollTrigger } from 'gsap/ScrollTrigger';\n\ngsap.registerPlugin(ScrollTrigger);\n\nexport default function About() {\n  const revealRefs = useRef([]);\n  const hideComponent = useRef(null);\n\n  const addToRefs = el => {\n    if (!revealRefs.current.includes(el)) {\n      revealRefs.current.push(el);\n    }\n  }\n\n  useEffect(() => {\n    hideComponent.current.style.visibility = 'visible';\n    revealRefs.current.forEach((el, idx) => {\n      gsap.fromTo(\n        el, \n        {\n          autoAlpha: 0,\n          x: -100\n        },\n        {\n          duration: 1, \n          autoAlpha: 1, \n          x: 0,\n          ease: Power3.easeInOut,\n          scrollTrigger: {\n            id: `section-${idx + 1}`,\n            trigger: el,\n            start: 'top center+=250',\n            toggleActions: 'play none none reverse',\n            // markers: true\n          }\n        });\n    });\n  }, []);\n\n  return (\n    <div ref={hideComponent} className={css`\n      visibility: hidden;\n    `}>\n      <div ref={addToRefs}>\n        <div className={css`\n          display: flex;\n          align-items: center;\n\n          @media only screen and (min-width: 768px) {\n            h3 {\n              font-size: 3rem;\n            }\n            p {\n              font-size: 2rem;\n            }\n          }\n        `}>\n          <h3 className={css`\n            display: inline-block;\n            font-size: 2rem;\n            margin: .5rem 0;\n            `}>about\n          </h3>\n        </div>\n\n        <div>\n          <p className={css`\n            font-size: 1.5rem;\n            margin: 0;\n            width: 70%;\n            `}>I'm a front-end developer based in batam. Currently working as a game developer in a company in batam.</p>\n        </div>\n      </div>\n\n      <div className={css`\n        display: flex;\n        flex-direction: column;\n        margin-top: 5em;\n\n        > div {\n          margin: 1em 0;\n        }\n\n        @media only screen and (min-width: 768px) {\n          margin-top: 6em;\n\n          h5 {\n            font-size: 3rem;\n          }\n          p {\n            font-size: 1.5rem;\n          }\n        }\n      `}>\n        <div ref={addToRefs} >\n          <div className={css`\n            display: inline-block;\n            margin-bottom: 10px;\n          `}>\n            <h5 className={css`\n              font-size: 1.5rem;\n              margin: 0;\n            `}>what i usually do</h5>\n          </div>\n\n          <div>\n            <p className={css`\n              font-size: 1rem;\n              margin: 0;\n            `}>front-end development</p>\n          </div>\n        </div>\n\n        <div ref={addToRefs}>\n          <div className={css`\n            display: inline-block;\n            margin-bottom: 10px;\n          `}>\n            <h5 className={css`\n              font-size: 1.5rem;\n              margin: 0;\n            `}>what tech i used</h5>\n          </div>\n\n          <div className={css`\n            font-size: 1rem;\n          `}>\n            <p className={css`\n              margin: 0;\n            `}>\n              unity engine (at work)\n            </p>\n\n            <p className={css`\n              margin: 0;\n            `}>\n              react js (self taught)\n            </p>\n          </div>\n        </div>\n\n        <div ref={addToRefs}>\n          <div className={css`\n            display: inline-block;\n            margin-bottom: 10px;\n          `}>\n            <h5 className={css`\n              font-size: 1.5rem;\n              margin: 0;\n            `}>contact & social media</h5>\n          </div>\n\n          <div>\n            <p className={css`\n              font-size: 1rem;\n              color: #474787;\n            `}>\n              phone \n            </p>\n            <p className={css`\n              font-size: 1.3rem;\n              margin: 0;\n            `}>\n              +62-852-6781-9928\n            </p>\n\n            <p className={css`\n              font-size: 1rem;\n              color: #474787;\n            `}>\n              email\n            </p>\n            <p className={css`\n              font-size: 1.3rem;\n              margin: 0;\n            `}>\n              francoclivemaleke23@gmail.com\n            </p>\n\n            <p className={css`\n              font-size: 1rem;\n              color: #474787;\n            `}>\n              github\n            </p>\n            <p className={css`\n              font-size: 1.3rem;\n              margin: 0;\n            `}>\n              github.com/malekeclive\n            </p>\n          </div>\n        </div>\n      </div>\n\n    </div>\n  )\n}\n","import React from 'react';\n\nimport { css } from 'emotion';\n\nexport default function Experience() {\n  return (\n    <div className={css`\n      margin-bottom: 1em;\n    `}>\n      <div>\n        <h3 className={css`\n          font-size: 3rem;\n          margin: .5rem 0;\n        `}>career</h3>\n      </div>\n\n      <div>\n        <p><b>2019 - present. Unity developer at astagame.</b></p>\n        <p>developing and collaborating with other team to make interactive card game.</p>\n      </div>\n    </div>\n  )\n}\n","import React, { useState } from 'react';\n// import './App.css';\nimport { css } from 'emotion';\n\nimport Home from './Components/Home';\nimport SplashScreen from './Components/SplashScreen';\nimport Top from './Components/Top';\nimport Bottom from './Components/Bottom';\nimport About from './Components/About';\nimport Experience from './Components/Experience';\n\nfunction App() {\n  const [ isSplashScreenDone, setIsSplashScreenDone ] = useState(false);\n\n  return (\n    <div className=\"container\">\n      <SplashScreen setIsSplashScreenDone={setIsSplashScreenDone} />\n      { isSplashScreenDone ? \n        <div>\n          <header>\n            <Top />\n          </header>\n\n          <main className={css`\n            display: flex;\n            flex-direction: column;\n            margin: 10px 10%;\n          `}>\n            <section className={css`\n              height: 15em;\n\n              @media only screen and (min-width: 768px) {\n                height: 10em;\n              }\n            `}>\n              <Home />\n            </section>\n\n            <section>\n              <About />\n            </section>\n\n            <section>\n              <Experience />\n            </section>\n          </main>\n          \n          <footer>\n            <Bottom />\n          </footer>\n        </div>\n      :\n        null\n      }\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}